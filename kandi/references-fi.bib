@incollection{gorton_understanding_2011,
	title = {Understanding Software Architecture},
	rights = {©2011 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-642-19175-6 978-3-642-19176-3},
	pages = {1--15},
	booktitle = {Essential Software Architecture},
	publisher = {Springer Berlin Heidelberg},
	author = {Gorton, Ian},
	urldate = {2016-02-14},
	year = {2011},
	langid = {english},
	keywords = {{IT} in Business, Management of Computing and Information Systems, Software Engineering}
}

@book{Rozanski:2011:SSA:2072649,
 author = {Rozanski, Nick and Woods, Ein},
 title = {Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives},
 year = {2011},
 isbn = {032171833X, 9780321718334},
 pages = {31--43},
 edition = {2},
 publisher = {Addison-Wesley Professional}
} 


@inproceedings{solms_what_2012,
	location = {New York, {NY}, {USA}},
	title = {What is Software Architecture?},
	isbn = {978-1-4503-1308-7},
	doi = {10.1145/2389836.2389879},
	series = {{SAICSIT} '12},
	pages = {363--373},
	booktitle = {Proceedings of the South African Institute for Computer Scientists and Information Technologists Conference},
	publisher = {{ACM}},
	author = {Solms, Fritz},
	year = {2012},
	keywords = {reference architecture, software architecture}
}


@inproceedings{may2005survey,
  title={A survey of software architecture viewpoint models},
  author={May, Nicholas},
  booktitle={Proceedings of the Sixth Australasian Workshop on Software and System Architectures},
  pages={13--24},
  year={2005},
  organization={Citeseer}
}

@inproceedings{Ran:1998:ASV:288408.288438,
 author = {Ran, Alexander},
 title = {Architectural Structures and Views},
 booktitle = {Proceedings of the Third International Workshop on Software Architecture},
 series = {ISAW '98},
 year = {1998},
 isbn = {1-58113-081-3},
 location = {Orlando, Florida, USA},
 pages = {117--120},
 numpages = {4},
 doi = {10.1145/288408.288438},
 acmid = {288438},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {architectural views, requirements, software architecture, structures of software}
} 

@INPROCEEDINGS{ARaHVeSCiSDu, 
author={A. Razavizadeh and H. Verjus and S. Cimpan and S. Ducasse}, 
booktitle={Software Architecture, 2009 European Conference on Software Architecture. WICSA/ECSA 2009. Joint Working IEEE/IFIP Conference on}, 
title={Multiple viewpoints architecture extraction}, 
year={2009}, 
pages={329-332}, 
keywords={reverse engineering;software architecture;domain knowledge;recursive framework;software system architecture;software system comprehension;viewpoints architecture extraction;Computer architecture;Computer bugs;Data mining;Europe;Information resources;Object oriented modeling;Phase measurement;Software architecture;Software systems;Time measurement}, 
doi={10.1109/WICSA.2009.5290676}, 
month={Sept}
}

@inproceedings{Brondum:2010:TAV:1833335.1833344,
 author = {Br{\o}ndum, John and Zhu, Liming},
 title = {Towards an Architectural Viewpoint for Systems of Software Intensive Systems},
 booktitle = {Proceedings of the 2010 ICSE Workshop on Sharing and Reusing Architectural Knowledge},
 series = {SHARK '10},
 year = {2010},
 isbn = {978-1-60558-967-1},
 location = {Cape Town, South Africa},
 pages = {60--63},
 numpages = {4},
 doi = {10.1145/1833335.1833344},
 acmid = {1833344},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {software architecture, systems-of-systems}
} 

@inproceedings{Galster:2011:DTC:2031759.2031761,
 author = {Galster, Matthias},
 title = {Dependencies, Traceability and Consistency in Software Architecture: Towards a View-based Perspective},
 booktitle = {Proceedings of the 5th European Conference on Software Architecture: Companion Volume},
 series = {ECSA '11},
 year = {2011},
 isbn = {978-1-4503-0618-8},
 location = {Essen, Germany},
 pages = {1:1--1:4},
 articleno = {1},
 numpages = {4},
 doi = {10.1145/2031759.2031761},
 acmid = {2031761},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {architecture viewpoints, consistency, dependencies, software architecture, traceability}
} 

@inproceedings{Garlan:2000:SAR:336512.336537,
 author = {Garlan, David},
 title = {Software Architecture: A Roadmap},
 booktitle = {Proceedings of the Conference on The Future of Software Engineering},
 series = {ICSE '00},
 year = {2000},
 isbn = {1-58113-253-0},
 location = {Limerick, Ireland},
 pages = {91--101},
 numpages = {11},
 doi = {10.1145/336512.336537},
 acmid = {336537},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {software architecture, software design, software engineering}
} 

@inproceedings{krutchen1995,
	author = {Kruchten, Philippe},
	title = {Architectural Blueprints—The “4+1” View
Model of Software Architecture},
	publisher = {IEEE},
	pages = {42--50},
	year = {1995}
}

@book{Clements:2002:DSA:599933,
 author = {Clements, Paul and Garlan, David and Bass, Len and Stafford, Judith and Nord, Robert and Ivers, James and Little, Reed},
 title = {Documenting Software Architectures: Views and Beyond},
 year = {2002},
 isbn = {0201703726},
 publisher = {Pearson Education}
} 

% standardit

@article{ieee_2000,
	author= {IEEE},
	title = {{IEEE} Recommended Practice for Architectural Description of Software-Intensive Systems},
	doi = {10.1109/IEEESTD.2000.91944},
	abstract = {This recommended practice addresses the activities of the creation, analysis, and sustainment of architectures of software-intensive systems, and the recording of such architectures in terms of architectural descriptions . A conceptual framework for architectural description is established. The content of an architectural description is defined. Annexes provide the rationale for key concepts and terminology, the relationships to other standards, and examples of usage.},
	pages = {i--23},
	journaltitle = {{IEEE} Std 1471-2000},
	year = {2000},
	keywords = {architectural description, architecture, software-intensive system, stakeholder con-cerns, system stakeholder, view, viewpoint}
}


@ARTICLE{ISOIEEE42010, 
author = {{ISO/IEC/IEEE}},
journal={ISO/IEC/IEEE 42010:2011}, 
title={ISO/IEC/IEEE Systems and software engineering -- Architecture description}, 
year={2011}, 
pages={1-46}, 
keywords={Computer architecture;IEEE standards;Software engineering;IEEE 42010;architecting;architecture decision;architecture description;architecture description language;architecture framework;architecture model;architecture rationale;architecture view;architecture viewpoint;correspondence;correspondence rule;system concern}, 
doi={10.1109/IEEESTD.2011.6129467}, 
month={Dec}

}

@article{ISO/IEC25010:2011,
	title={ISO/IEC 25010:2011 Systems and software engineering -- Systems and software Quality Requirements and Evaluation (SQuaRE) -- System and software quality models},
	author={ISO},
	year={2011},
	url={http://www.iso.org/iso/catalogue\_detail.htm?csnumber=35733}
}

@article{UML,
	title={OMG Unified Modeling Language TM (OMG UML), version 2.5},
	author={{Object Management Group}},
	year={2015},
	url={http://www.omg.org/spec/UML/2.5/PDF/}
}


% ylläpidettävyys

@inproceedings{bengtsson1998towards,
  title={Towards maintainability metrics on software architecture: An adaptation of object-oriented metrics},
  author={Bengtsson, PerOlof},
  booktitle={First Nordic Workshop on Software Architecture, Ronneby},
  year={1998},
  pages={87--91}
}

@article{Dubey:2011:AMM:2020976.2020983,
 author = {Dubey, Sanjay Kumar and Rana, Ajay},
 title = {Assessment of Maintainability Metrics for Object-oriented Software System},
 journal = {ACM SIGSOFT Software Engineering Notes},
 issue_date = {September 2011},
 volume = {36},
 number = {5},
 month = sep,
 year = {2011},
 issn = {0163-5948},
 pages = {1--7},
 numpages = {7},
 doi = {10.1145/2020976.2020983},
 acmid = {2020983},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {CK metric suite, maintainability, metrics, object-oriented system, software}
} 

@ARTICLE{Rosane:1981, 
author={A. F. Rosene and J. E. Connolly and K. M. Bracy}, 
journal={IEEE Transactions on Reliability}, 
title={Software Maintainability - What It Means and How to Achieve It}, 
year={1981}, 
volume={R-30}, 
number={3}, 
pages={240-245}, 
keywords={Communication system control;Computer architecture;Engineering management;Maintenance engineering;Matrices;Multitasking;Software design;Software maintenance;Testing;Time sharing computer systems;Design evaluation;Maintenance prediction;Software Architecture}, 
doi={10.1109/TR.1981.5221065}, 
ISSN={0018-9529}, 
month={Aug}
}


% yleinen testattavuus

@article{Binder:1994:DTO:182987.184077,
 author = {Binder, Robert V.},
 title = {Design for Testability in Object-oriented Systems},
 journal = {Communications of the ACM.},
 issue_date = {Sept. 1994},
 volume = {37},
 number = {9},
 month = sep,
 year = {1994},
 issn = {0001-0782},
 pages = {87--101},
 numpages = {15},
 doi = {10.1145/182987.184077},
 acmid = {184077},
 publisher = {ACM.},
 address = {New York, NY, USA}
} 

@inproceedings{mari_impact_2003,
	title = {The impact of maintainability on component-based software systems},
	pages = {25--32},
	booktitle = {Euromicro Conference, 2003. Proceedings. 29th},
	publisher = {{IEEE}},
	author = {Mari, Matinlassi and Eila, Niemelä},
	urldate = {2016-02-25},
	year = {2003}
}

@article{Khan:2009:MBT:1507195.1507204,
 author = {Khan, R. A. and Mustafa, K.},
 title = {Metric Based Testability Model for Object Oriented Design (MTMOOD)},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {March 2009},
 volume = {34},
 number = {2},
 month = feb,
 year = {2009},
 issn = {0163-5948},
 pages = {1--6},
 numpages = {6},
 doi = {10.1145/1507195.1507204},
 acmid = {1507204},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {design, metrics, model, object oriented, software characteristics, software testability}
} 


@INPROCEEDINGS{Jungmayr:2002, 
author={S. Jungmayr}, 
booktitle={Software Maintenance, 2002. Proceedings. International Conference on}, 
title={Identifying test-critical dependencies}, 
year={2002}, 
pages={404-413}, 
keywords={program testing;software maintenance;software metrics;regression testing;software maintenance cost reduction;software testability metrics;system structure;test-critical dependencies;Automatic testing;Controllability;Costs;Design for testability;Guidelines;Observability;Software maintenance;Software systems;Software testing;System testing}, 
doi={10.1109/ICSM.2002.1167797}, 
ISSN={1063-6773} 
}

@INPROCEEDINGS{Bruntink:2004, 
author={M. Bruntink and A. van Deursen}, 
booktitle={Source Code Analysis and Manipulation, 2004. Fourth IEEE International Workshop on}, 
title={Predicting class testability using object-oriented metrics}, 
year={2004}, 
pages={136-145}, 
month={Sept},
publisher={{IEEE.}}
}

@article{Freedman:1991:TSC:126218.126229,
 author = {Freedman, Roy S.},
 title = {Testability of Software Components},
 journal = {IEEE Trans. Softw. Eng.},
 issue_date = {June 1991},
 volume = {17},
 number = {6},
 month = jun,
 year = {1991},
 issn = {0098-5589},
 pages = {553--564},
 numpages = {12},
 doi = {10.1109/32.87281},
 acmid = {126229},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {controllability, domain testability, domain-testable program, domain-testable specification, formal specification, input-output inconsistencies, nondomain-testable specification, observability, program specifications, program testing, small test sets, software components, test outputs}
} 

@article{Voas:1995:STN:624607.625469,
 author = {Voas, Jeffrey M. and Miller, Keith W.},
 title = {Software Testability: The New Verification},
 journal = {IEEE Softw.},
 issue_date = {May 1995},
 volume = {12},
 number = {3},
 month = may,
 year = {1995},
 issn = {0740-7459},
 pages = {17--28},
 numpages = {12},
 doi = {10.1109/52.382180},
 acmid = {625469},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA}
} 

@inproceedings{voas_improving_1992,
	title = {Improving the software development process using testability research},
	pages = {114--121},
	booktitle = {Software Reliability Engineering, 1992. Proceedings., Third International Symposium on},
	publisher = {{IEEE}},
	author = {Voas, Jeffrey M. and Miller, Keith W.},
	urldate = {2016-03-02},
	year = {1992}
}

% design pattern testattavuus

@inproceedings{baudry_measuring_2003,
	title = {Measuring and improving design patterns testability},
	pages = {50--59},
	booktitle = {Software Metrics Symposium, 2003. Proceedings. Ninth International},
	publisher = {{IEEE.}},
	author = {Baudry, Benoit and Traon, Yves Le and Sunyé, Gerson and Jézéquel, Jean-Marc},
	urldate = {2016-03-05},
	year = {2003}
}

@inproceedings{baudry_testability_2002,
	title = {Testability analysis of a {UML} class diagram},
	eventtitle = {Eighth {IEEE} Symposium on Software Metrics, 2002. Proceedings},
	pages = {54--63},
	booktitle = {Eighth {IEEE} Symposium on Software Metrics, 2002. Proceedings},
	publisher = {{IEEE.}},
	author = {Baudry, B. and Traon, Y. Le and Sunye, G.},
	year = {2002}
}

% arkkitehtuuriset hajut 


@inproceedings{vale_bad_2014,
	title = {Bad Smells in Software Product Lines: A Systematic Review},
	isbn = {978-1-4799-7860-1},
	doi = {10.1109/SBCARS.2014.21},
	shorttitle = {Bad Smells in Software Product Lines},
	pages = {84--94},
	publisher = {{IEEE}},
	author = {Vale, Gustavo and Figueiredo, Eduardo and Abilio, Ramon and Costa, Heitor},
	urldate = {2016-03-15},
	date = {2014-09},
	year = {2014}
}

@inproceedings{macia_enhancing_2013,
	title = {Enhancing the Detection of Code Anomalies with Architecture-Sensitive Strategies},
	isbn = {978-0-7695-4948-4 978-1-4673-5833-0},
	doi = {10.1109/CSMR.2013.27},
	pages = {177--186},
	publisher = {{IEEE}},
	author = {Macia, I. and Garcia, A. and Chavez, C. and von Staa, A.},
	urldate = {2016-03-15},
	date = {2013-03},
	year = {2013}
}

@INPROCEEDINGS{HotSpot, 
author={R. Mo and Y. Cai and R. Kazman and L. Xiao}, 
booktitle={Software Architecture (WICSA), 2015 12th Working IEEE/IFIP Conference on}, 
title={Hotspot Patterns: The Formal Definition and Automatic Detection of Architecture Smells}, 
year={2015}, 
pages={51-60}, 
keywords={software architecture;Baldwin design rule theory;Clark design rule theory;architecture smells;automatic detection;bug-proneness;change-prone files;error-prone files;formal definition;hotspot patterns;implicit cross-module dependency;structure-history integrated patterns;tool-supported evaluations;unstable interface;Computer architecture;Detectors;History;Maintenance engineering;Microprocessors;Observers;Software architecture;Software Architecture;Software Quality;Software maintenance}, 
doi={10.1109/WICSA.2015.12}, 
month={May}

}

% testattavuus arkkitehtuurissa


@inproceedings{kazman_case_2015,
	title = {A Case Study in Locating the Architectural Roots of Technical Debt},
	isbn = {978-1-4799-1934-5},
	doi = {10.1109/ICSE.2015.146},
	pages = {179--188},
	publisher = {{IEEE}},
	author = {Kazman, Rick and Cai, Yuanfang and Mo, Ran and Feng, Qiong and Xiao, Lu and Haziyev, Serge and Fedak, Volodymyr and Shapochka, Andriy},
	urldate = {2016-03-15},
	date = {2015-05},
	year = {2015}
}

@inproceedings{gao_component_2005,
	title = {A component testability model for verification and measurement},
	volume = {2},
	pages = {211--218},
	booktitle = {Computer Software and Applications Conference, 2005. {COMPSAC} 2005. 29th Annual International},
	publisher = {{IEEE}},
	author = {Gao, Jerry and Shih, Ming-Chih},
	urldate = {2016-03-15},
	year = {2005}
}

@inproceedings{Eickelmann:1996:MOS:243327.243602,
 author = {Eickelmann, Nancy S. and Richardson, Debra J.},
 title = {What Makes One Software Architecture More Testable Than Another?},
 booktitle = {Joint Proceedings of the Second International Software Architecture Workshop (ISAW-2) and International Workshop on Multiple Perspectives in Software Development (Viewpoints '96) on SIGSOFT '96 Workshops},
 series = {ISAW '96},
 year = {1996},
 isbn = {0-89791-867-3},
 location = {San Francisco, California, USA},
 pages = {65--67},
 numpages = {3},
 doi = {10.1145/243327.243602},
 acmid = {243602},
 publisher = {ACM.}
} 

@inproceedings{joshi_design_2014,
	title = {Design and code time testability analysis for object oriented systems},
	pages = {590--592},
	booktitle = {Computing for Sustainable Global Development ({INDIACom}), 2014 International Conference on},
	publisher = {{IEEE}},
	author = {Joshi, Madhura and Sardana, Neetu},
	urldate = {2016-03-15},
	year = {2014}
}

% Arkkitehtuuriset hajut

@inproceedings{fontana_towards_2015,
	title = {Towards Assessing Software Architecture Quality by Exploiting Code Smell Relations},
	isbn = {978-1-4673-7076-9},
	doi = {10.1109/SAM.2015.8},
	pages = {1--7},
	publisher = {{IEEE}},
	author = {Fontana, Francesca Arcelli and Ferme, Vincenzo and Zanoni, Marco},
	urldate = {2016-03-15},
	date = {2015-05},
	year = {2015}
}

@inproceedings{macia_impact_2011,
	title = {On the Impact of Aspect-Oriented Code Smells on Architecture Modularity: An Exploratory Study},
	isbn = {978-0-7695-4626-1 978-1-4673-0208-1},
	doi = {10.1109/SBCARS.2011.18},
	shorttitle = {On the Impact of Aspect-Oriented Code Smells on Architecture Modularity},
	pages = {41--50},
	publisher = {{IEEE}},
	author = {Macia, Isela and Garcia, Alessandro and von Staa, Arndt and Garcia, Joshua and Medvidovic, Nenad},
	urldate = {2016-03-15},
	date = {2011-09},
	year = {2011}
}


@inproceedings{de_andrade_architectural_2014,
 author = {de Andrade, Hugo Sica and Almeida, Eduardo and Crnkovic, Ivica},
 title = {Architectural Bad Smells in Software Product Lines: An Exploratory Study},
 booktitle = {Proceedings of the WICSA 2014 Companion Volume},
 series = {WICSA '14 Companion.},
 year = {2014},
 isbn = {978-1-4503-2523-3},
 location = {Sydney, Australia},
 pages = {12:1--12:6},
 articleno = {12},
 numpages = {6},
 acmid = {2578237},
 publisher = {ACM.},
 keywords = {architectural bad smells, architecture, evaluation, exploratory study, software product lines},
} 


@incollection{garcia_toward_2009,
	title = {Toward a catalogue of architectural bad smells},
	pages = {146--162},
	booktitle = {Architectures for adaptive software systems},
	publisher = {Springer},
	author = {Garcia, Joshua and Popescu, Daniel and Edwards, George and Medvidovic, Nenad},
	urldate = {2016-03-05},
	year = {2009}
}

@inproceedings{garcia_identifying_2009,
	title = {Identifying Architectural Bad Smells},
	doi = {10.1109/CSMR.2009.59},
	abstract = {Certain design fragments in software architectures can have a negative impact on system maintainability. In this paper, we introduce the concept of architectural "bad smells," which are frequently recurring software designs that can have non-obvious and significant detrimental effects on system lifecycle properties. We define architectural smells and differentiate them from related concepts, such as architectural antipatterns and code smells. We also describe four representative architectural smells we encountered in the context of reverse-engineering eighteen grid technologies and refactoring one large industrial system.},
	eventtitle = {13th European Conference on Software Maintenance and Reengineering, 2009. {CSMR} '09},
	pages = {255--258},
	booktitle = {13th European Conference on Software Maintenance and Reengineering, 2009. {CSMR} '09},
	author = {Garcia, J. and Popescu, D. and Edwards, G. and Medvidovic, N.},
	year = {2009},
	keywords = {Application software, architectural bad smell identification, Architectural Bad Smells, Architectural Refactoring, Computer architecture, Computer industry, Computer science, Design engineering, design fragments, grid computing, grid technologies, industrial system refactoring, reverse engineering, software architecture, software architectures, Software design, software maintenance, Software systems, system lifecycle properties, system maintainability, Technology management}
}


@inproceedings{coelho_improving_2005,
	title = {Improving architecture testability with patterns},
	pages = {114--115},
	booktitle = {Companion to the 20th annual {ACM} {SIGPLAN} conference on Object-oriented programming, systems, languages, and applications},
	publisher = {{ACM}},
	author = {Coelho, Roberta and Kulesza, Uirá and Von Staa, Arndt},
	urldate = {2016-02-05},
	year = {2005}
}


@inproceedings{bertran_detecting_2011,
	title = {Detecting architecturally-relevant code smells in evolving software systems},
	pages = {1090--1093},
	booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
	publisher = {{ACM.}},
	author = {Bertran, Isela Macia},
	urldate = {2016-03-02},
	year = {2011}
	
}

% pohdintaa


@inproceedings{binkley_dependence_2008,
	title = {Dependence anti patterns},
	pages = {25--34},
	booktitle = {Automated Software Engineering-Workshops, 2008. {ASE} Workshops 2008. 23rd {IEEE}/{ACM} International Conference on},
	publisher = {{IEEE}},
	author = {Binkley, David and Gold, Nicolas and Harman, Mark and Li, Zheng and Mahdavi, Kiarash and Wegener, Joachim},
	urldate = {2016-03-18},
	year = {2008}
}

@inproceedings{mo_mapping_2013,
	title = {Mapping architectural decay instances to dependency models},
	pages = {39--46},
	booktitle = {Proceedings of the 4th International Workshop on Managing Technical Debt},
	publisher = {{IEEE} Press},
	author = {Mo, Ran and Garcia, Joshua and Cai, Yuanfang and Medvidovic, Nenad},
	urldate = {2016-03-15},
	year = {2013}
}

@inproceedings{wong_detecting_2011,
	title = {Detecting software modularity violations},
	pages = {411--420},
	booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
	publisher = {{ACM}},
	author = {Wong, Sunny and Cai, Yuanfang and Kim, Miryung and Dalton, Michael},
	urldate = {2016-03-15},
	year = {2011}
}

@inproceedings{mattsson2006software,
  title={Software architecture evaluation methods for performance, maintainability, testability, and portability},
  author={Mattsson, Michael and Grahn, H{\aa}kan and M{\aa}rtensson, Frans},
  booktitle={Second International Conference on the Quality of Software Architectures},
  year={2006},
  organization={Citeseer}
}
